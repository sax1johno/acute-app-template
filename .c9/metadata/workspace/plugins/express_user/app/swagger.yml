{"filter":false,"title":"swagger.yml","tooltip":"/plugins/express_user/app/swagger.yml","undoManager":{"mark":63,"position":63,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":143,"column":2},"action":"insert","lines":["# Example YAML to get you started quickly.","# Be aware that YAML has indentation based scoping.","# Code completion support is available so start typing for available options.","swagger: '2.0'","","# This is your document metadata","info:","  version: \"1.0.0\"","  title: aCute User µService","","# Describe your paths here","paths:","  # This is a path endpoint. Change it.","  /user:","    # This is a HTTP operation","    get:","      # Describe this verb here. Note: you can use markdown","      description: |","        Gets a `user` object.","        Query param \"id\" determines the ID of the user to retrieve.","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: id","          in: query","          description: The ID of the user to retrieve","          required: true","          type: string","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response","          # A schema describing your response object.","          # Use JSON Schema format","          schema:","            title: User","            $ref: '#/definitions/User'","    post:","      # Describe this verb here. Note: you can use markdown","      description:","        Creates a new `user` object or updates an existing one.","        ID is specified in the post body","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: user","          in: body","          description: The user data to save","          required: true","          schema:","            $ref: '#/definitions/User'","          # format: uuid","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response with created user.","          # A schema describing your response object.","          # Use JSON Schema format","          schema:","            title: User","            $ref: '#/definitions/User'","  /user/{id}:","    put:","      # Describe this verb here. Note: you can use markdown","      description:","        Updates an existing `user` object or updates an existing one.","        ID is specified in the URL","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: id","          in: path","          description: The ID of the user to retrieve","          required: true","          type: string","          format: uuid","        -","          name: user","          in: body","          schema:","            title: User","            $ref: '#/definitions/User'","          # format: uuid","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response with updated user.","          # A schema describing your response object.","          # Use JSON Schema format","          schema:","            title: User","            $ref: '#/definitions/User'","        404:","          description: Error response where user was not found","    delete:","      # Describe this verb here. Note: you can use markdown","      description:","        Deletes an existing `user` object or updates an existing one.","        ID is specified in the URL","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: id","          in: path","          description: The ID of the user to retrieve","          required: true","          type: string","          format: uuid","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response with updated user.","          schema:","            title: User","            $ref: '#/definitions/User'","        404:","          description: User was not found.","","definitions:","  User:","    type: object","    properties:","      id:","        type: string","        format: uuid","      firstName:","        type: string","      lastName:","        type: string","      username:","        type: string","      password:","        type: string","        format: password","        ","  "]}]}],[{"group":"doc","deltas":[{"start":{"row":143,"column":1},"end":{"row":143,"column":2},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":143,"column":0},"end":{"row":143,"column":1},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":142,"column":8},"end":{"row":143,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":142,"column":4},"end":{"row":142,"column":8},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":142,"column":0},"end":{"row":142,"column":4},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":141,"column":24},"end":{"row":142,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":141,"column":24},"action":"remove","lines":["# Example YAML to get you started quickly.","# Be aware that YAML has indentation based scoping.","# Code completion support is available so start typing for available options.","swagger: '2.0'","","# This is your document metadata","info:","  version: \"1.0.0\"","  title: aCute User µService","","# Describe your paths here","paths:","  # This is a path endpoint. Change it.","  /user:","    # This is a HTTP operation","    get:","      # Describe this verb here. Note: you can use markdown","      description: |","        Gets a `user` object.","        Query param \"id\" determines the ID of the user to retrieve.","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: id","          in: query","          description: The ID of the user to retrieve","          required: true","          type: string","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response","          # A schema describing your response object.","          # Use JSON Schema format","          schema:","            title: User","            $ref: '#/definitions/User'","    post:","      # Describe this verb here. Note: you can use markdown","      description:","        Creates a new `user` object or updates an existing one.","        ID is specified in the post body","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: user","          in: body","          description: The user data to save","          required: true","          schema:","            $ref: '#/definitions/User'","          # format: uuid","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response with created user.","          # A schema describing your response object.","          # Use JSON Schema format","          schema:","            title: User","            $ref: '#/definitions/User'","  /user/{id}:","    put:","      # Describe this verb here. Note: you can use markdown","      description:","        Updates an existing `user` object or updates an existing one.","        ID is specified in the URL","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: id","          in: path","          description: The ID of the user to retrieve","          required: true","          type: string","          format: uuid","        -","          name: user","          in: body","          schema:","            title: User","            $ref: '#/definitions/User'","          # format: uuid","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response with updated user.","          # A schema describing your response object.","          # Use JSON Schema format","          schema:","            title: User","            $ref: '#/definitions/User'","        404:","          description: Error response where user was not found","    delete:","      # Describe this verb here. Note: you can use markdown","      description:","        Deletes an existing `user` object or updates an existing one.","        ID is specified in the URL","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: id","          in: path","          description: The ID of the user to retrieve","          required: true","          type: string","          format: uuid","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response with updated user.","          schema:","            title: User","            $ref: '#/definitions/User'","        404:","          description: User was not found.","","definitions:","  User:","    type: object","    properties:","      id:","        type: string","        format: uuid","      firstName:","        type: string","      lastName:","        type: string","      username:","        type: string","      password:","        type: string","        format: password"]},{"start":{"row":0,"column":0},"end":{"row":144,"column":2},"action":"insert","lines":["# Example YAML to get you started quickly.","# Be aware that YAML has indentation based scoping.","# Code completion support is available so start typing for available options.","swagger: '2.0'","","# This is your document metadata","info:","  version: \"1.0.0\"","  title: aCute User µService","","# Describe your paths here","paths:","  # This is a path endpoint. Change it.","  /user:","    # This is a HTTP operation","    get:","      # Describe this verb here. Note: you can use markdown","      description: |","        Gets a `user` object.","        Query param \"id\" determines the ID of the user to retrieve.","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: id","          in: query","          description: The ID of the user to retrieve","          required: true","          type: string","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response","          # A schema describing your response object.","          # Use JSON Schema format","          schema:","            title: User","            $ref: '#/definitions/User'","    post:","      # Describe this verb here. Note: you can use markdown","      description:","        Creates a new `user` object or updates an existing one.","        ID is specified in the post body","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: user","          in: body","          description: The user data to save","          required: true","          schema:","            $ref: '#/definitions/User'","          # format: uuid","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response with created user.","          # A schema describing your response object.","          # Use JSON Schema format","          schema:","            title: User","            $ref: '#/definitions/User'","  /user/{id}:","    put:","      # Describe this verb here. Note: you can use markdown","      description:","        Updates an existing `user` object or updates an existing one.","        ID is specified in the URL","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: id","          in: path","          description: The ID of the user to retrieve","          required: true","          type: string","          format: uuid","        -","          name: user","          in: body","          required: true","          schema:","            title: User","            $ref: '#/definitions/User'","          # format: uuid","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response with updated user.","          # A schema describing your response object.","          # Use JSON Schema format","          schema:","            title: User","            $ref: '#/definitions/User'","        404:","          description: Error response where user was not found","    delete:","      # Describe this verb here. Note: you can use markdown","      description:","        Deletes an existing `user` object or updates an existing one.","        ID is specified in the URL","      # This is array of GET operation parameters:","      parameters:","        # An example parameter that is in query and is required","        -","          name: id","          in: path","          description: The ID of the user to retrieve","          required: true","          type: string","          format: uuid","      # Expected responses for this operation:","      responses:","        # Response code","        200:","          description: Successful response with updated user.","          schema:","            title: User","            $ref: '#/definitions/User'","        404:","          description: User was not found.","","definitions:","  User:","    type: object","    properties:","      id:","        type: string","        format: uuid","      firstName:","        type: string","      lastName:","        type: string","      username:","        type: string","      password:","        type: string","        format: password","        ","  "]}]}],[{"group":"doc","deltas":[{"start":{"row":144,"column":0},"end":{"row":144,"column":2},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":143,"column":8},"end":{"row":144,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":2},"end":{"row":2,"column":77},"action":"remove","lines":["Example YAML to get you started quickly.","# Be aware that YAML has indentation based scoping.","# Code completion support is available so start typing for available options."]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["Y"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["A"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["M"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["L"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"insert","lines":["U"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":17},"end":{"row":0,"column":18},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":18},"end":{"row":0,"column":19},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":19},"end":{"row":0,"column":20},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":20},"end":{"row":0,"column":21},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":21},"end":{"row":0,"column":22},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":22},"end":{"row":0,"column":23},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":23},"end":{"row":0,"column":24},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":24},"end":{"row":0,"column":25},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":25},"end":{"row":0,"column":26},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":26},"end":{"row":0,"column":27},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":27},"end":{"row":0,"column":28},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":28},"end":{"row":0,"column":29},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":29},"end":{"row":0,"column":30},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":30},"end":{"row":0,"column":31},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":31},"end":{"row":0,"column":32},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":32},"end":{"row":0,"column":33},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":33},"end":{"row":0,"column":34},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":34},"end":{"row":0,"column":35},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":35},"end":{"row":0,"column":36},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":36},"end":{"row":0,"column":37},"action":"insert","lines":["y"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":37},"end":{"row":0,"column":38},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":38},"end":{"row":0,"column":39},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":39},"end":{"row":0,"column":40},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":40},"end":{"row":0,"column":41},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":41},"end":{"row":0,"column":42},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":42},"end":{"row":0,"column":43},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":43},"end":{"row":0,"column":44},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":44},"end":{"row":0,"column":45},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":45},"end":{"row":0,"column":46},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":46},"end":{"row":0,"column":47},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":47},"end":{"row":0,"column":48},"action":"insert","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":48},"end":{"row":0,"column":49},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":49},"end":{"row":0,"column":50},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":50},"end":{"row":0,"column":51},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":51},"end":{"row":0,"column":52},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":52},"end":{"row":0,"column":53},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":53},"end":{"row":0,"column":54},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":54},"end":{"row":0,"column":55},"action":"insert","lines":["."]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":11,"column":8},"end":{"row":11,"column":8},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1427553286000,"hash":"f6c7da1ddac46f6c0fcf18e46ef27f3488a496cc"}